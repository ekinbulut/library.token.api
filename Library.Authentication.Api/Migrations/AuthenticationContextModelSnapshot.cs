// <auto-generated />

using System;
using System.Diagnostics.CodeAnalysis;
using Library.Authentication.Service.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Library.Authentication.Api.Migrations
{
    [ExcludeFromCodeCoverage]
    [DbContext(typeof(AuthenticationContext))]
    internal class AuthenticationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Library.Authentication.Service.Data.Entities.EPermission", b =>
            {
                b.Property<int>("Id")
                 .ValueGeneratedOnAdd()
                 .HasColumnName("ID")
                 .HasAnnotation("SqlServer:ValueGenerationStrategy"
                                , SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<DateTime>("Created")
                 .HasColumnName("CREATED")
                 .HasColumnType("datetime2");

                b.Property<string>("CreatedBy")
                 .HasColumnName("CREATED_BY");

                b.Property<int?>("ERoleId");

                b.Property<string>("Type")
                 .HasColumnName("TYPE")
                 .HasMaxLength(150);

                b.Property<DateTime>("Updated")
                 .HasColumnName("UPDATED")
                 .HasColumnType("datetime2");

                b.Property<string>("UpdatedBy")
                 .HasColumnName("UPDATED_BY");

                b.HasKey("Id");

                b.HasIndex("ERoleId");

                b.ToTable("PERMISSIONS");
            });

            modelBuilder.Entity("Library.Authentication.Service.Data.Entities.ERole", b =>
            {
                b.Property<int>("Id")
                 .ValueGeneratedOnAdd()
                 .HasColumnName("ID")
                 .HasAnnotation("SqlServer:ValueGenerationStrategy"
                                , SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<DateTime>("Created")
                 .HasColumnName("CREATED")
                 .HasColumnType("datetime2");

                b.Property<string>("CreatedBy")
                 .HasColumnName("CREATED_BY");

                b.Property<string>("Name")
                 .HasColumnName("NAME")
                 .HasMaxLength(150);

                b.Property<DateTime>("Updated")
                 .HasColumnName("UPDATED")
                 .HasColumnType("datetime2");

                b.Property<string>("UpdatedBy")
                 .HasColumnName("UPDATED_BY");

                b.HasKey("Id");

                b.ToTable("ROLES");

                b.HasData(
                          new
                          {
                              Id = 1,
                              Created = new DateTime(2019, 1, 5, 19, 50, 57, 527, DateTimeKind.Local).AddTicks(4957),
                              CreatedBy = "SYSTEM", Name = "Administrator",
                              Updated = new DateTime(2019, 1, 5, 19, 50, 57, 529, DateTimeKind.Local).AddTicks(7981)
                          },
                          new
                          {
                              Id = 2,
                              Created = new DateTime(2019, 1, 5, 19, 50, 57, 530, DateTimeKind.Local).AddTicks(9693),
                              CreatedBy = "SYSTEM", Name = "Guest",
                              Updated = new DateTime(2019, 1, 5, 19, 50, 57, 530, DateTimeKind.Local).AddTicks(9710)
                          });
            });

            modelBuilder.Entity("Library.Authentication.Service.Data.Entities.EUser", b =>
            {
                b.Property<int>("Id")
                 .ValueGeneratedOnAdd()
                 .HasColumnName("ID")
                 .HasAnnotation("SqlServer:ValueGenerationStrategy"
                                , SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<DateTime>("Created")
                 .HasColumnName("CREATED")
                 .HasColumnType("datetime2");

                b.Property<string>("CreatedBy")
                 .HasColumnName("CREATED_BY");

                b.Property<string>("Email")
                 .HasColumnName("EMAIL")
                 .HasMaxLength(50);

                b.Property<string>("Name")
                 .HasColumnName("NAME")
                 .HasMaxLength(150);

                b.Property<string>("Password")
                 .HasColumnName("PASSWORD")
                 .HasMaxLength(150);

                b.Property<int>("RoleId")
                 .HasColumnName("ROLE_ID")
                 .HasMaxLength(1);

                b.Property<DateTime>("Updated")
                 .HasColumnName("UPDATED")
                 .HasColumnType("datetime2");

                b.Property<string>("UpdatedBy")
                 .HasColumnName("UPDATED_BY");

                b.Property<string>("Username")
                 .HasColumnName("USERNAME")
                 .HasMaxLength(150);

                b.HasKey("Id");

                b.HasIndex("RoleId");

                b.ToTable("USERS");

                b.HasData(
                          new
                          {
                              Id = 1,
                              Created = new DateTime(2019, 1, 5, 19, 50, 57, 531, DateTimeKind.Local).AddTicks(8257),
                              CreatedBy = "SYSTEM", Email = "admin@admin.com", Password = "181985", RoleId = 1,
                              Updated = new DateTime(2019, 1, 5, 19, 50, 57, 531, DateTimeKind.Local).AddTicks(8274),
                              Username = "admin@admin.com"
                          });
            });

            modelBuilder.Entity("Library.Authentication.Service.Data.Entities.EPermission", b =>
            {
                b.HasOne("Library.Authentication.Service.Data.Entities.ERole")
                 .WithMany("Permissions")
                 .HasForeignKey("ERoleId");
            });

            modelBuilder.Entity("Library.Authentication.Service.Data.Entities.EUser", b =>
            {
                b.HasOne("Library.Authentication.Service.Data.Entities.ERole", "Role")
                 .WithMany("Users")
                 .HasForeignKey("RoleId")
                 .OnDelete(DeleteBehavior.Cascade);
            });
#pragma warning restore 612, 618
        }
    }
}